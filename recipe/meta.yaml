{% set version = "1.2.0.1" %}
{% set posix = 'm2-' if win else '' %}
{% set native = 'm2w64-' if win else '' %}

package:
  name: r-promises
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/promises_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/promises/promises_{{ version }}.tar.gz
  sha256: 8d3a8217909e91f4c2a2eebba5ac8fc902a9ac1a9e9d8a30815c9dc0f162c4b7

build:
  merge_build_host: true  # [win]
  number: 0
  rpaths:
    - lib/R/lib/
    - lib/

requirements:
  build:
    - {{ compiler('c') }}              # [not win]
    - {{ compiler('m2w64_c') }}        # [win]
    - {{ compiler('cxx') }}            # [not win]
    - {{ compiler('m2w64_cxx') }}      # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]
  host:
    - r-base
    - r-r6
    - r-rcpp
    - r-later
    - r-magrittr
    - r-rlang
  run:
    - r-base
    - {{ native }}gcc-libs         # [win]
    - r-r6
    - r-rcpp
    - r-later
    - r-magrittr
    - r-rlang

test:
  commands:
    - $R -e "library('promises')"           # [not win]
    - "\"%R%\" -e \"library('promises')\""  # [win]

about:
  home: https://rstudio.github.io/promises, https://github.com/rstudio/promises
  license: MIT
  summary: Provides fundamental abstractions for doing asynchronous programming in R using promises. Asynchronous programming is useful for allowing a single R process to orchestrate multiple tasks in the background while also attending to something else. Semantics are similar to 'JavaScript' promises, but with a syntax
    that is idiomatic R.
  license_family: MIT
  license_file:
    - {{ environ["PREFIX"] }}/lib/R/share/licenses/MIT
    - LICENSE

extra:
  recipe-maintainers:
    - conda-forge/r
    - halldc
    - philip-khor

# Package: promises
# Type: Package
# Title: Abstractions for Promise-Based Asynchronous Programming
# Version: 1.1.0
# Authors@R: c( person("Joe", "Cheng", email = "joe@rstudio.com", role = c("aut", "cre")), person("RStudio", role = c("cph", "fnd")) )
# Description: Provides fundamental abstractions for doing asynchronous programming in R using promises. Asynchronous programming is useful for allowing a single R process to orchestrate multiple tasks in the background while also attending to something else. Semantics are similar to 'JavaScript' promises, but with a syntax that is idiomatic R.
# License: MIT + file LICENSE
# Imports: R6, Rcpp, later, rlang, stats, magrittr
# Suggests: testthat, future, knitr, rmarkdown
# LinkingTo: later, Rcpp
# RoxygenNote: 6.1.1
# Encoding: UTF-8
# LazyData: true
# VignetteBuilder: knitr
# URL: https://rstudio.github.io/promises, https://github.com/rstudio/promises
# BugReports: https://github.com/rstudio/promises/issues
# NeedsCompilation: yes
# Packaged: 2019-10-04 16:59:31 UTC; jcheng
# Author: Joe Cheng [aut, cre], RStudio [cph, fnd]
# Maintainer: Joe Cheng <joe@rstudio.com>
# Repository: CRAN
# Date/Publication: 2019-10-04 23:00:05 UTC
